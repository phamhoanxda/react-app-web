{"version":3,"sources":["assets/images/orange-bg.jpg","assets/images/blue-bg.jpg","assets/images/colorful-bg.jpg","components/Banner/index.js","constants/images.js","features/Photo/components/PhotoCard/index.jsx","features/Photo/components/PhotoList/index.jsx","features/Photo/pages/Main/index.js","constants/global.js","customField/InputField/index.js","customField/SelectField/index.js","components/RamdomPhoto/index.js","components/RandomPhotoField/index.js","components/PhotoForm/index.js","features/Photo/pages/AddEdit/index.js","features/Photo/index.js"],"names":["module","exports","Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","Images","ORANGE_BG","orangeBackground","BLUE_BG","blueBackground","COLORFUL_BG","colorfulBackground","PINK_BG","pinkBackground","PhotoCard","photo","onEditClick","onRemoveClick","src","alt","Button","outline","size","color","onClick","defaultProps","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","Row","map","Col","key","xs","md","lg","MainPage","photos","useSelector","state","dispatch","useDispatch","history","useHistory","console","log","Container","class","to","push","id","removePhotoId","action","removePhoto","PHOTO_CATEGORY_OPTIONS","value","label","InputField","field","form","type","placeholder","disabled","name","onChange","onBlur","errors","touched","showError","FormGroup","Label","for","Input","invalid","component","FormFeedback","SelectField","options","find","option","selectedOption","selectedValue","changeEvent","target","getRandomImageUrl","randomId","Math","trunc","random","RandomPhoto","imageUrl","onImageUrlChange","onRanDomButtonBlur","handleRandomPhotoClick","a","randomImageUrl","onError","RandomPhotoField","newImageUrl","setFieldValue","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","onSubmit","formikProps","values","isSubmitting","Spinner","AddEditPage","photoId","useParams","editedPhoto","x","Promise","resolve","setTimeout","addPhoto","updatePhoto","Photo","match","useRouteMatch","exact","path","url","NotFound"],"mappings":"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","file":"static/js/4.52bc89f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/orange-bg.e6624e7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blue-bg.146c36c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/colorful-bg.cb9ae265.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Banner.scss\";\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string,\r\n  backgroundUrl: PropTypes.string,\r\n};\r\n\r\nfunction Banner(props) {\r\n  const { title, backgroundUrl } = props;\r\n  const bannerStyle = backgroundUrl\r\n    ? { backgroundImage: `url(${backgroundUrl})` }\r\n    : {};\r\n\r\n  return (\r\n    <section className=\"banner\" style={bannerStyle}>\r\n      <h1 className=\"banner__title\">{title}</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import orangeBackground from \"./../assets/images/orange-bg.jpg\";\r\nimport blueBackground from \"./../assets/images/blue-bg.jpg\";\r\nimport colorfulBackground from \"./../assets/images/colorful-bg.jpg\";\r\nimport pinkBackground from \"./../assets/images/orange-bg.jpg\";\r\n\r\nconst Images = {\r\n  ORANGE_BG: orangeBackground,\r\n  BLUE_BG: blueBackground,\r\n  COLORFUL_BG: colorfulBackground,\r\n  PINK_BG: pinkBackground,\r\n};\r\n\r\nexport default Images;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./PhotoCard.scss\";\r\n\r\nPhotoCard.propTypes = {\r\n  photo: PropTypes.object,\r\n  onEditClick: PropTypes.func,\r\n  onRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  photo: {},\r\n  onEditClick: null,\r\n  onRemoveClick: null,\r\n};\r\n\r\nfunction PhotoCard(props) {\r\n  const { photo, onEditClick, onRemoveClick } = props;\r\n\r\n  const handleEditClick = () => {\r\n    if (onEditClick) onEditClick(photo);\r\n  };\r\n\r\n  const handleRemoveClick = () => {\r\n    if (onRemoveClick) onRemoveClick(photo);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={photo.photo} alt={photo.title} />\r\n\r\n      <div className=\"photo__overlay\">\r\n        <h3 className=\"photo__title\">{photo.title}</h3>\r\n\r\n        <div className=\"photo__actions\">\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"light\" onClick={handleEditClick}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button\r\n              outline\r\n              size=\"sm\"\r\n              color=\"danger\"\r\n              onClick={handleRemoveClick}\r\n            >\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport PhotoCard from \"../PhotoCard\";\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: [],\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nfunction PhotoList(props) {\r\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n\r\n  return (\r\n    <Row>\r\n      {photoList.map((photo) => (\r\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\r\n          <PhotoCard\r\n            photo={photo}\r\n            onEditClick={onPhotoEditClick}\r\n            onRemoveClick={onPhotoRemoveClick}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PhotoList;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport Banner from \"components/Banner\";\r\nimport Images from \"constants/images\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PhotoList from \"features/Photo/components/PhotoList\";\r\nimport { removePhoto } from \"features/Photo/photoSlice\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n  const photos = useSelector((state) => state.photos);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  console.log(\"List: \", photos);\r\n\r\n  const handlePhotoEditClick = (photo) => {\r\n    console.log(\"Edit: \", photo);\r\n    history.push(`/photos/${photo.id}`);\r\n  };\r\n\r\n  const handlePhotoRemoveClick = (photo) => {\r\n    console.log(\"Remove: \", photo);\r\n    const removePhotoId = photo.id;\r\n    const action = removePhoto(removePhotoId);\r\n    dispatch(action);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-main\">\r\n      <Banner title=\"Your awesome photos\" backgroundUrl={Images.PINK_BG} />\r\n      <Container className=\"text-center\">\r\n        <Link class=\"btn btn-success add-btn\" to=\"/photos/add\">\r\n          Add new photo\r\n        </Link>\r\n        <PhotoList\r\n          photoList={photos}\r\n          onPhotoEditClick={handlePhotoEditClick}\r\n          onPhotoRemoveClick={handlePhotoRemoveClick}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","export const PHOTO_CATEGORY_OPTIONS = [\r\n  { value: 1, label: \"Technology\" },\r\n  { value: 2, label: \"Education\" },\r\n  { value: 3, label: \"Nature\" },\r\n  { value: 4, label: \"Animals\" },\r\n  { value: 5, label: \"Styles\" },\r\n];\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormFeedback, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n  //\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nfunction InputField(props) {\r\n  const { field, form, type, label, placeholder, disabled } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for=\"titleId\">{label}</Label>}\r\n      <Input\r\n        id={name}\r\n        //\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        //\r\n        type={type}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        invalid={showError}\r\n      />\r\n\r\n      {/* {showError && <FormFeedback>{errors[name]}</FormFeedback>} */}\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { ErrorMessage } from \"formik\";\r\nSelectField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n  //\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  options: PropTypes.array,\r\n};\r\n\r\nfunction SelectField(props) {\r\n  const { field, form, options, type, label, placeholder, disabled } = props;\r\n  const { name, value, onChange, onBlur } = field;\r\n\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const selectedOption = options.find((option) => option.value === value);\r\n\r\n  const handelSelectedOptionChange = (selectedOption) => {\r\n    const selectedValue = selectedOption\r\n      ? selectedOption.value\r\n      : selectedOption;\r\n    const changeEvent = {\r\n      target: {\r\n        name: name,\r\n        value: selectedValue,\r\n      },\r\n    };\r\n    field.onChange(changeEvent);\r\n  };\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <Select\r\n        id={name}\r\n        //\r\n        name={name}\r\n        value={value}\r\n        onChange={handelSelectedOptionChange}\r\n        onBlur={onBlur}\r\n        //\r\n        options={options}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        className={showError ? \"is-invalid\" : \"\"}\r\n      />\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./RamdomPhoto.scss\";\r\n\r\nRandomPhoto.propTypes = {\r\n  name: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  onImageUrlChange: PropTypes.func,\r\n  onRanDomButtonBlur: PropTypes.func,\r\n};\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  return `https://picsum.photos/id/${randomId}/300/300`;\r\n};\r\n\r\nfunction RandomPhoto(props) {\r\n  const { name, imageUrl, onImageUrlChange, onRanDomButtonBlur } = props;\r\n\r\n  const handleRandomPhotoClick = async () => {\r\n    if (onImageUrlChange) {\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onImageUrlChange(randomImageUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"random-photo\">\r\n      <div className=\"random-photo__button\">\r\n        <Button\r\n          outline\r\n          name={name}\r\n          color=\"primary\"\r\n          onBlur={onRanDomButtonBlur}\r\n          onClick={handleRandomPhotoClick}\r\n        >\r\n          Random Photo\r\n        </Button>\r\n      </div>\r\n      <div className=\"random-photo__photo\">\r\n        {imageUrl && (\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"Oops ... not found. Please click again\"\r\n            onError={handleRandomPhotoClick}\r\n          ></img>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomPhoto;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormFeedback, FormGroup, Label } from \"reactstrap\";\r\nimport RandomPhoto from \"components/RamdomPhoto\";\r\nimport { ErrorMessage } from \"formik\";\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n};\r\n\r\nfunction RandomPhotoField(props) {\r\n  const { field, form, label } = props;\r\n  const { name, value, onBlur } = field;\r\n\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  const handleImageUrlChange = (newImageUrl) => {\r\n    form.setFieldValue(name, newImageUrl);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <RandomPhoto\r\n        name={name}\r\n        imageUrl={value}\r\n        onImageUrlChange={handleImageUrlChange}\r\n        onRanDomButtonBlur={onBlur}\r\n      />\r\n      <div className={showError ? \"is-invalid\" : \"\"}></div>\r\n      <ErrorMessage name={name} component={FormFeedback} />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default RandomPhotoField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Container,\r\n  Row,\r\n  Spinner,\r\n} from \"reactstrap\";\r\n\r\n// import { PHOTO_CATEGORY_OPTIONS } from \"../../constants/global\";\r\n// import Images from \"../../constants/images\";\r\n\r\nimport Images from \"constants/images\";\r\nimport { PHOTO_CATEGORY_OPTIONS } from \"constants/global\";\r\nimport { FastField, Form, Formik } from \"formik\";\r\nimport InputField from \"customField/InputField\";\r\nimport SelectField from \"customField/SelectField\";\r\nimport RandomPhotoField from \"components/RandomPhotoField\";\r\n\r\nimport * as Yup from \"yup\";\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nfunction PhotoForm(props) {\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"This field is required.\"),\r\n    categoryId: Yup.number().required(\"This field is required\").nullable(),\r\n    photo: Yup.string().required(\"This field is required\"),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      {(formikProps) => {\r\n        //Do somthing here...\r\n        const { values, errors, touched, isSubmitting } = formikProps;\r\n        console.log({ values, errors, touched });\r\n\r\n        return (\r\n          <Form>\r\n            <FastField\r\n              name=\"title\"\r\n              component={InputField}\r\n              //\r\n              label=\"Title\"\r\n              placeholder=\"Eg: Wow nature ...\"\r\n            />\r\n\r\n            <FastField\r\n              name=\"categoryId\"\r\n              component={SelectField}\r\n              //\r\n              label=\"Category\"\r\n              placeholder=\"What ' your photo category?\"\r\n              options={PHOTO_CATEGORY_OPTIONS}\r\n            />\r\n            <FastField\r\n              name=\"photo\"\r\n              component={RandomPhotoField}\r\n              label=\"Photo\"\r\n            />\r\n            <FormGroup>\r\n              <Button type=\"submit\" color={isAddMode ? \"primary\" : \"success\"}>\r\n                {isSubmitting && <Spinner size=\"sm\" />}\r\n                {isAddMode ? \"Add to Album\" : \"Update your photo\"}\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default PhotoForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.scss\";\r\nimport PhotoForm from \"components/PhotoForm\";\r\nimport Banner from \"components/Banner\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPhoto, updatePhoto } from \"features/Photo/photoSlice\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nAddEditPage.propTypes = {};\r\n\r\nfunction AddEditPage(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { photoId } = useParams();\r\n  const isAddMode = !photoId;\r\n  //\r\n  const editedPhoto = useSelector((state) =>\r\n    state.photos.find((x) => x.id === +photoId)\r\n  );\r\n\r\n  const initialValues = isAddMode\r\n    ? {\r\n        title: \"\",\r\n        categoryId: null,\r\n        photo: \"\",\r\n      }\r\n    : editedPhoto;\r\n\r\n  //\r\n  const handleOnSubmit = (values) => {\r\n    return new Promise((resolve) => {\r\n      console.log(\"values: \" + values);\r\n\r\n      setTimeout(() => {\r\n        if (isAddMode) {\r\n          const action = addPhoto(values);\r\n          console.log(action);\r\n          dispatch(action);\r\n        } else {\r\n          const action = updatePhoto(values);\r\n          dispatch(action);\r\n        }\r\n        history.push(\"/photos\");\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-edit\">\r\n      <Banner title=\"Pick your amazing photo\" />\r\n      <div className=\"photo-edit__form\">\r\n        {/* Do form rất phức tạp và hay có validation nên sẽ cho nó ra riêng */}\r\n        <PhotoForm\r\n          isAddMode={isAddMode}\r\n          initialValues={initialValues}\r\n          onSubmit={handleOnSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEditPage;\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport MainPage from \"./pages/Main\";\r\nimport AddEditPage from \"./pages/AddEdit\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport NotFound from \"components/NotFound\";\r\n\r\nPhoto.propTypes = {};\r\n\r\nfunction Photo(props) {\r\n  const match = useRouteMatch();\r\n  console.log({ match });\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path={match.url} component={MainPage} />\r\n\r\n      <Route exact path={`${match.url}/add`} component={AddEditPage} />\r\n      <Route exact path={`${match.url}/:photoId`} component={AddEditPage} />\r\n\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"sourceRoot":""}