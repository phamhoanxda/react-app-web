{"version":3,"sources":["api/axiosClient.js","api/productApi.js","features/Auth/pages/index.js","components/Header/index.js","App.js","serviceWorker.js","app/store.js","index.js","features/Photo/photoSlice.js","components/NotFound/index.js"],"names":["axiosClient","axios","create","baseURL","process","headers","paramsSerializer","params","querystring","stringify","interceptors","request","use","a","config","response","data","error","productApi","getAll","get","id","url","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","signInSuccessUrl","SignIn","props","className","firebaseAuth","Header","Container","Row","Col","xs","href","target","rel","exact","to","activeClassName","require","Photo","React","lazy","initializeApp","apiKey","authDomain","App","useEffect","unregisterAuthObserver","onAuthStateChanged","user","console","log","displayName","getIdToken","token","useState","setProductList","_page","_limit","fetchProductList","fallback","from","path","component","NotFound","Boolean","window","location","hostname","match","store","configureStore","reducer","photos","photoReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","photo","createSlice","name","initialState","categoryId","title","reducers","addPhoto","state","action","newPhoto","payload","push","removePhoto","removePhotoId","filter","updatePhoto","photoIndex","findIndex","actions"],"mappings":"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","file":"static/js/main.a3a8fae7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport querystring from \"query-string\";\r\n\r\n// Set up default config for http requests here\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n  },\r\n  paramsSerializer: (params) => querystring.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  //Handle token here...\r\n  return config;\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    //handle error\r\n    throw error;\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","import axiosClient from \"./axiosClient\";\r\n\r\nconst productApi = {\r\n  getAll: (params) => {\r\n    const url = \"/photos\";\r\n    return axiosClient.get(url, { params });\r\n  },\r\n  get: (id) => {\r\n    const url = `/photos/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n};\r\n\r\nexport default productApi;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebase from \"firebase\";\r\nimport { StyledFirebaseAuth } from \"react-firebaseui\";\r\n\r\nSignIn.propTypes = {};\r\n\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: \"redirect\",\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n  signInSuccessUrl: \"/photos\",\r\n};\r\n\r\nfunction SignIn(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"text-center\">\r\n        <h2>Login Form</h2>\r\n        <p>or login with social accounts</p>\r\n      </div>\r\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport \"./Header.scss\";\r\n\r\nHeader.propTypes = {};\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className=\"header\">\r\n      <Container>\r\n        <Row className=\"justify-content-between\">\r\n          <Col xs=\"auto\">\r\n            <a\r\n              className=\"header__link header__title\"\r\n              href=\"https://bimcauduong.com\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              PHAM HOAN XDA\r\n            </a>\r\n          </Col>\r\n\r\n          <Col xs=\"auto\">\r\n            <NavLink\r\n              exact\r\n              className=\"header__link\"\r\n              to=\"/sign-in\"\r\n              activeClassName=\"header__link--active\"\r\n            >\r\n              Sign In\r\n            </NavLink>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import productApi from \"api/productApi\";\r\nimport SignIn from \"features/Auth/pages\";\r\nimport firebase from \"firebase\";\r\nimport React, { Suspense, useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport \"reactstrap\";\r\nimport \"./App.scss\";\r\nimport Header from \"./components/Header\";\r\nimport NotFound from \"./components/NotFound\";\r\nrequire(\"dotenv\").config();\r\n//Lazy load - Code splitting\r\nconst Photo = React.lazy(() => import(\"./features/Photo\"));\r\n\r\n// Config FireBase\r\n\r\n// Configure Firebase.\r\nconst config = {\r\n  apiKey: \"AIzaSyA7FdXP3f3CI2iUVuENbmARccrF45nFZko\",\r\n  authDomain: \"react-redux-app-29eaf.firebaseapp.com\",\r\n  // ...\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfunction App() {\r\n  //Handle firebase auth changed\r\n  useEffect(() => {\r\n    //DID MOUNT\r\n    const unregisterAuthObserver = firebase\r\n      .auth()\r\n      .onAuthStateChanged(async (user) => {\r\n        if (!user) {\r\n          // user logs out, handle somthing here\r\n          console.log(\"USER NOT LOGGIN\");\r\n          return;\r\n        }\r\n        console.log(\"Log user name: \", user.displayName);\r\n        const token = await user.getIdToken();\r\n        console.log(\"Log token name: \", token);\r\n      });\r\n    //UNMOUNT\r\n    return () => unregisterAuthObserver();\r\n  }, []);\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProductList = async () => {\r\n      try {\r\n        const params = {\r\n          _page: 1,\r\n          _limit: 10,\r\n        };\r\n\r\n        const response = await productApi.getAll(params);\r\n        setProductList(response.data);\r\n        console.log(response);\r\n      } catch (error) {\r\n        console.log(\"failed to fetch api: \", error);\r\n      }\r\n    };\r\n    fetchProductList();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"photo-app\">\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <BrowserRouter>\r\n          <Header />\r\n          <Switch>\r\n            <Redirect exact from=\"/\" to=\"/photos\" />\r\n            <Route path=\"/photos\" component={Photo} />\r\n            <Route path=\"/sign-in\" component={SignIn} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import photoReducer from \"features/Photo/photoSlice\";\r\nconst { configureStore } = require(\"@reduxjs/toolkit\");\r\nconst rootReducer = {\r\n  photos: photoReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"app/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst initialPhotos = [\r\n  {\r\n    id: 91176,\r\n    categoryId: 5,\r\n    photo: \"https://picsum.photos/id/532/300/300\",\r\n    title:\r\n      \"Enim laboris dolore consectetur et fugiat do amet eiusmod anim proident do culpa irure consectetur.\",\r\n  },\r\n  {\r\n    id: 82605,\r\n    categoryId: 1,\r\n    photo: \"https://picsum.photos/id/43/300/300\",\r\n    title: \"Ad officia magna veniam sunt.\",\r\n  },\r\n  {\r\n    id: 74760,\r\n    categoryId: 3,\r\n    photo: \"https://picsum.photos/id/722/300/300\",\r\n    title:\r\n      \"Minim anim in sunt esse nisi sit magna consequat in sit laboris adipisicing.\",\r\n  },\r\n  {\r\n    id: 39588,\r\n    categoryId: 5,\r\n    photo: \"https://picsum.photos/id/294/300/300\",\r\n    title: \"Deserunt in tempor est id consectetur cupidatat.\",\r\n  },\r\n  {\r\n    id: 72133,\r\n    categoryId: 4,\r\n    photo: \"https://picsum.photos/id/229/300/300\",\r\n    title:\r\n      \"Labore culpa velit sunt sit anim ad do veniam do proident sunt et nisi mollit.\",\r\n  },\r\n  {\r\n    id: 95333,\r\n    categoryId: 1,\r\n    photo: \"https://picsum.photos/id/862/300/300\",\r\n    title:\r\n      \"Fugiat fugiat voluptate tempor minim ipsum nisi culpa magna officia ea deserunt tempor.\",\r\n  },\r\n  {\r\n    id: 62419,\r\n    categoryId: 3,\r\n    photo: \"https://picsum.photos/id/515/300/300\",\r\n    title:\r\n      \"Excepteur nisi aliquip ex aliqua consectetur id laboris cillum elit dolor dolor anim sint.\",\r\n  },\r\n  {\r\n    id: 12569,\r\n    categoryId: 5,\r\n    photo: \"https://picsum.photos/id/730/300/300\",\r\n    title:\r\n      \"Occaecat exercitation Lorem cupidatat adipisicing elit duis consequat esse et tempor eu enim cupidatat.\",\r\n  },\r\n  {\r\n    id: 47434,\r\n    categoryId: 3,\r\n    photo: \"https://picsum.photos/id/287/300/300\",\r\n    title: \"Veniam officia est nulla proident labore.\",\r\n  },\r\n  {\r\n    id: 52685,\r\n    categoryId: 3,\r\n    photo: \"https://picsum.photos/id/859/300/300\",\r\n    title:\r\n      \"Ut incididunt do magna culpa consectetur id deserunt et enim elit quis.\",\r\n  },\r\n  {\r\n    id: 69928,\r\n    categoryId: 5,\r\n    photo: \"https://picsum.photos/id/110/300/300\",\r\n    title:\r\n      \"Nisi velit fugiat voluptate fugiat magna officia qui fugiat ad non.\",\r\n  },\r\n  {\r\n    id: 86160,\r\n    categoryId: 5,\r\n    photo: \"https://picsum.photos/id/649/300/300\",\r\n    title: \"Id ex enim non dolore reprehenderit eu ullamco.\",\r\n  },\r\n];\r\nconst photo = createSlice({\r\n  name: \"photos\",\r\n  initialState: initialPhotos,\r\n  reducers: {\r\n    addPhoto: (state, action) => {\r\n      const newPhoto = action.payload;\r\n      state.push(newPhoto);\r\n    },\r\n    removePhoto: (state, action) => {\r\n      const removePhotoId = action.payload;\r\n      state = state.filter((photo) => photo.id !== removePhotoId);\r\n      return state;\r\n    },\r\n    updatePhoto: (state, action) => {\r\n      const newPhoto = action.payload;\r\n      const photoIndex = state.findIndex((photo) => photo.id === newPhoto.id);\r\n      if (photoIndex >= 0) {\r\n        state[photoIndex] = newPhoto;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nconst { reducer, actions } = photo;\r\nexport const { addPhoto, removePhoto, updatePhoto } = actions;\r\nexport default reducer;\r\n","import React from \"react\";\r\n\r\nNotFound.propTypes = {};\r\n\r\nfunction NotFound(props) {\r\n  return <div>Oops ... NotFound</div>;\r\n}\r\n\r\nexport default NotFound;\r\n"],"sourceRoot":""}